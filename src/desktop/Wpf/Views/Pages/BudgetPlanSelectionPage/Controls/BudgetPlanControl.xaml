<UserControl
    x:Class="Budgetter.Wpf.Views.Pages.BudgetPlanSelectionPage.Controls.BudgetPlanControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <UserControl.Resources>

        <Style
            x:Key="DatePickerStyle"
            BasedOn="{StaticResource MaterialDesignFloatingHintDatePicker}"
            TargetType="DatePicker">
            <Setter Property="Margin" Value="3" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="IsTodayHighlighted" Value="True" />
        </Style>

        <Style x:Key="CheckboxStyle" TargetType="CheckBox">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1.35" ScaleY="1.35" />
                </Setter.Value>
            </Setter>
        </Style>

        <Style
            x:Key="ButtonStyle"
            BasedOn="{StaticResource MaterialDesignRaisedDarkButton}"
            TargetType="Button">
            <Setter Property="Margin" Value="10,12,10,12" />
            <Setter Property="FontSize" Value="20" />
        </Style>

        <Style
            x:Key="TextBoxStyle"
            BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}"
            TargetType="TextBox">
            <Setter Property="Margin" Value="5" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style
            x:Key="ComboBoxStyle"
            BasedOn="{StaticResource MaterialDesignFloatingHintComboBox}"
            TargetType="ComboBox">
            <Setter Property="Margin" Value="5" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="8.4*" />
            <RowDefinition Height="1.6*" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="2.5*" />
                <RowDefinition Height="2.5*" />
                <RowDefinition Height="4.5*" />
                <RowDefinition Height="0.5*" />
            </Grid.RowDefinitions>

            <TextBox
                x:Name="TitleTextBox"
                Grid.Row="0"
                materialDesign:HintAssist.Hint="{DynamicResource BudgetPlanNameText}"
                Style="{StaticResource TextBoxStyle}"
                Text="{Binding Title, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}" />

            <StackPanel Grid.Row="1">

                <ComboBox
                    materialDesign:HintAssist.Hint="{DynamicResource CurrencyText}"
                    materialDesign:TextFieldAssist.HasClearButton="True"
                    ItemsSource="{Binding AvailableCurrencies}"
                    SelectedValue="{Binding Currency, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}"
                    Style="{StaticResource ComboBoxStyle}"
                    Visibility="{Binding CreateMode, Converter={StaticResource BooleanToVisibilityConverter}}" />

                <TextBox
                    materialDesign:HintAssist.HelperText="{DynamicResource CurrencyHelperText}"
                    materialDesign:HintAssist.Hint="{DynamicResource CurrencyText}"
                    IsReadOnly="True"
                    Style="{StaticResource TextBoxStyle}"
                    Text="{Binding Currency}"
                    Visibility="{Binding CreateMode, Converter={StaticResource InverseBoolPropertyBindingConverter}}" />

            </StackPanel>
            <Grid Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="6*" />
                    <RowDefinition Height="4*" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="4.5*" />
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="4.5*" />
                </Grid.ColumnDefinitions>

                <DatePicker
                    Grid.Row="0"
                    Grid.Column="0"
                    materialDesign:HintAssist.Hint="{DynamicResource DateStartText}"
                    SelectedDate="{Binding ValidFrom, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}"
                    Style="{StaticResource DatePickerStyle}" />

                <DatePicker
                    Grid.Row="0"
                    Grid.Column="2"
                    materialDesign:HintAssist.Hint="{DynamicResource DateEndText}"
                    SelectedDate="{Binding ValidTo, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged, TargetNullValue=''}"
                    Style="{StaticResource DatePickerStyle}" />

                <Grid
                    Grid.Row="1"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    HorizontalAlignment="Center">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5*" />
                        <ColumnDefinition Width="5*" />
                    </Grid.ColumnDefinitions>

                    <CheckBox
                        Grid.Column="0"
                        Margin="0,0,10,0"
                        Content="{DynamicResource MonthlyText}"
                        IsChecked="{Binding IsMonthCheckBoxChecked, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                        Style="{StaticResource CheckboxStyle}" />

                    <CheckBox
                        Grid.Column="1"
                        Margin="10,0,0,0"
                        Content="{DynamicResource QuarterlyText}"
                        IsChecked="{Binding IsQuarterCheckBoxChecked, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                        Style="{StaticResource CheckboxStyle}" />

                </Grid>
            </Grid>
        </Grid>

        <Grid
            Grid.Row="1"
            HorizontalAlignment="Center"
            VerticalAlignment="Center">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5*" />
                <ColumnDefinition Width="5*" />
            </Grid.ColumnDefinitions>

            <Button
                Grid.Column="0"
                Command="{Binding CancelCommand}"
                Content="{DynamicResource CancelText}"
                Style="{StaticResource ButtonStyle}"
                Visibility="{Binding CanGoBack, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BooleanToVisibilityConverter}}" />

            <Button
                Grid.Column="1"
                Command="{Binding ModifyCommand}"
                Content="{DynamicResource SaveText}"
                Style="{StaticResource ButtonStyle}"
                Visibility="{Binding EditMode, Converter={StaticResource BooleanToVisibilityConverter}}" />

            <Button
                Grid.Column="1"
                Command="{Binding CreateCommand}"
                Content="{DynamicResource CreateText}"
                Style="{StaticResource ButtonStyle}"
                Visibility="{Binding CreateMode, Converter={StaticResource BooleanToVisibilityConverter}}" />
        </Grid>

    </Grid>
</UserControl>